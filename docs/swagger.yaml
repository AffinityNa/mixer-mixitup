swagger: '2.0'
schemes:
  - http
host: localhost:8911
basePath: /api
info:
  description: |
    # Introduction
    The Developer API allows our more advanced users to interact with Mix It Up using external or customized programs. To use this feature, ensure the Developer API is enabled on the Services page. All APIs are REST-like endpoints that you can perform calls receiving/using JSON text. All endpoints begin with the base address of http://localhost:8911/api/
  version: '1.0.0'
  title: Mix It Up Developer
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: User
    description: Operations related to Mix It Up User data
  - name: Currency
    description: Operations related to Mix It Up Currency data
  - name: Chat
    description: Operations related to Mix It Up Chat
  - name: Commands
    description: Operations related to Mix It Up Commands
  - name: Inventory
    description: Operations related to Mix It Up Inventory data

paths:
  '/users/{usernameOrID}':
    parameters:
      - name: usernameOrID
        in: path
        description: 'The name or ID that needs to be fetched'
        required: true
        type: string
    get:
      tags:
        - User
      summary: Get user data by username
      operationId: getUserByNameOrID
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpUser'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: This API can be used to set user's ViewingMinutes or Currency Amount.  This API can be used with a PATCH as well.
      tags:
        - User
      parameters:
        - name: updatedUserData
          in: body
          required: true
          schema:
           $ref: '#/definitions/UpdateMixItUpUser'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpUser'
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error'

  '/users':
    post:
      summary: This API can be used to lookup multiple users at once.
      tags:
        - User
      parameters:
        - name: usernameOrIDList
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListOfMixItUpUsernamesOrIDs'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpUsers'
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'

  '/users/{usernameOrID}/currency/{currencyID}/adjust':
    parameters:
      - name: usernameOrID
        in: path
        description: 'The name or ID that needs to be adjusted'
        required: true
        type: string
      - name: currencyID
        in: path
        description: 'The currency ID that needs to be adjusted'
        required: true
        type: string
        format: uuid
    put:
      summary: This API can be used to add or subtract currency from a user.  This API can be used with a PATCH as well.
      tags:
        - User
        - Currency
      parameters:
        - name: adjustUserCurrency
          in: body
          required: true
          schema:
           $ref: '#/definitions/AdjustUserCurrency'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpUser'
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: User does not have enough of the chosen currency to remove
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User or currency not found
          schema:
            $ref: '#/definitions/Error'

  '/users/{usernameOrID}/inventory/{inventoryID}/adjust':
    parameters:
      - name: usernameOrID
        in: path
        description: 'The name or ID that needs to be adjusted'
        required: true
        type: string
      - name: inventoryID
        in: path
        description: 'The inventory ID that needs to be adjusted'
        required: true
        type: string
        format: uuid
    put:
      summary: This API can be used to add or subtract inventory items from a user.  This API can be used with a PATCH as well.
      tags:
        - User
        - Inventory
      parameters:
        - name: adjustUserInventory
          in: body
          required: true
          schema:
           $ref: '#/definitions/AdjustUserInventory'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpUser'
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: User does not have enough of the chosen inventory items to remove
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User or inventory not found
          schema:
            $ref: '#/definitions/Error'

  '/users/top':
    parameters:
      - name: count
        in: query
        description: 'The number of users to retrieve. **Default: 10**'
        required: false
        type: integer
        default: 10
    get:
      tags:
        - User
      summary: Gets a list users ordered by viewing time descending.
      operationId: topUserByViewingTime
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpUsers'

  '/currency':
    get:
      tags:
        - Currency
      summary: Gets a list of all currencies available.
      operationId: getAllCurrencies
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpCurrency'

  '/currency/{currencyID}':
    parameters:
      - name: currencyID
        in: path
        description: 'The currency ID to query'
        required: true
        type: string
        format: uuid
    get:
      tags:
        - Currency
      summary: Gets a specific currency
      operationId: getCurrencyById
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpCurrency'
        '404':
          description: The currency could not be found.
          schema:
            $ref: '#/definitions/Error'

  '/currency/{currencyID}/top':
    parameters:
      - name: count
        in: query
        description: 'The number of users to retrieve. **Default: 10**'
        required: false
        type: integer
        default: 10
      - name: currencyID
        in: path
        description: 'The currency ID to query'
        required: true
        type: string
        format: uuid
    get:
      tags:
        - User
        - Currency
      summary: Gets a list users ordered by currency quantity descending.  The streamer and anyone marked as currency/rank exempt will not be visible in this list.
      operationId: topUserOfCurrency
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpUsers'
        '404':
          description: The currency could not be found.
          schema:
            $ref: '#/definitions/Error'

  '/currency/{currencyID}/give':
    parameters:
      - name: currencyID
        in: path
        description: 'The currency ID to query'
        required: true
        type: string
        format: uuid
    post:
      tags:
        - Currency
      summary: Gives a list of users various amounts of currency
      operationId: bulkGiveUsersCurrency
      parameters:
        - name: listOfUsersWithAmounts
          description: 'The list of users and the amounts to give.  Amounts MUST be positive only. Negative values will be ignored.'
          in: body
          required: true
          schema:
           $ref: '#/definitions/BulkGiveUsersCurrency'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpUsers'
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The currency could not be found.
          schema:
            $ref: '#/definitions/Error'

  '/chat/users':
    get:
      tags:
        - User
        - Chat
      summary: Gets a list of all users currently active in chat.
      operationId: getAllChatUsers
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpUsers'

  '/chat/message':
    post:
      tags:
        - Chat
      summary: Sends a message to the chat
      operationId: sendChatMessage
      parameters:
        - name: chatMessage
          description: 'The chat message to send'
          in: body
          required: true
          schema:
           $ref: '#/definitions/MixItUpChatMessage'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Chat
      summary: Clears the chat history
      operationId: clearChat
      responses:
        '200':
          description: Success

  '/chat/whisper':
    post:
      tags:
        - Chat
      summary: Sends a whisper to a user in chat
      operationId: sendChatWhisper
      parameters:
        - name: chatWhisper
          description: 'The chat whisper to send'
          in: body
          required: true
          schema:
           $ref: '#/definitions/MixItUpChatWhisper'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'

  '/quotes':
    get:
      tags:
        - Quotes
      summary: Gets a list of all quotes available.
      operationId: getAllQuotes
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpQuotes'

    put:
      tags:
        - Quotes
      summary: Used to create a new quote.
      operationId: addQuote
      parameters:
        - name: quoteText
          description: 'The quote text.'
          in: body
          required: true
          schema:
           $ref: '#/definitions/MixItUpAddQuote'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpQuote'
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'

  '/quotes/{quoteID}':
    parameters:
      - name: quoteID
        in: path
        description: 'The quote ID to query'
        required: true
        type: number
        format: int
    get:
      tags:
        - Quotes
      summary: Gets the requested quote.
      operationId: getQuote
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpQuote'
        '404':
          description: The quote could not be found.
          schema:
            $ref: '#/definitions/Error'

  '/commands':
    get:
      tags:
        - Commands
      summary: Gets a list of all commands available.
      operationId: getAllCommands
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpCommands'
            
  '/commands/{commandID}':
    parameters:
      - name: commandID
        in: path
        description: 'The command ID to query'
        required: true
        type: string
        format: uuid
    get:
      tags:
        - Commands
      summary: Gets the requested command.
      operationId: getCommand
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpCommand'
        '404':
          description: The command could not be found.
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Commands
      summary: Used to run the requested command.
      operationId: runCommand
      parameters:
        - name: arguments
          in: body
          required: false
          schema:
            $ref: '#/definitions/ListOfStrings'
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '404':
          description: The command could not be found.
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Commands
      summary: Used to enable or disable the requested command.
      operationId: updateCommand
      parameters:
        - name: updatedCommand
          description: 'The updated command. Note that only IsEnabled can be changed.'
          in: body
          required: true
          schema:
           $ref: '#/definitions/MixItUpCommand'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpCommand'
        '400':
          description: Bad request was sent in
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The command could not be found.
          schema:
            $ref: '#/definitions/Error'

  '/inventory':
    get:
      tags:
        - Inventory
      summary: Gets a list of all inventories available.
      operationId: getAllInventories
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfMixItUpInventory'

  '/inventory/{inventoryID}':
    parameters:
      - name: inventoryID
        in: path
        description: 'The inventory ID to query'
        required: true
        type: string
        format: uuid
    get:
      tags:
        - Inventory
      summary: Gets a specific inventory
      operationId: getInventoryById
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MixItUpInventory'
        '404':
          description: The inventory could not be found.
          schema:
            $ref: '#/definitions/Error'

definitions:
  MixItUpAddQuote:
    type: object
    required: [ GameName ]
    properties:
      QuoteText:
        description: The actual quote text.
        type: string
        example: That was amazing! - TyrenDes

  MixItUpQuote:
    type: object
    required: [ ID, DateTime, GameName, QuoteText ]
    properties:
      ID:
        description: The Mix It Up Quote ID.
        type: integer
        example: 321
      DateTime:
        description: The date and time the quote was added.
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
      GameName:
        description: The name of the game when the quote was created.
        type: string
        example: Rocket League
      QuoteText:
        description: The actual quote text.
        type: string
        example: That was amazing! - TyrenDes

  ListOfMixItUpQuotes:
    type: array
    items:
      $ref: '#/definitions/MixItUpQuote'

  MixItUpUser:
    type: object
    required: [ ID, ViewingMinutes, CurrencyAmounts ]
    properties:
      ID:
        description: The Mix It Up User ID.
        type: string
        format: uuid
        example: 137CD793-F4E7-4330-8282-B06E52644F78
      UserName:
        description: The username.
        type: string
        example: SaviorXTanren
      ViewingMinutes:
        description: The number of minutes the user has been in the stream.
        type: integer
        example: 3244
      CurrencyAmounts:
        type: array
        items:
          $ref: '#/definitions/MixItUpCurrencyAmount'
      InventoryAmounts:
        type: array
        items:
          $ref: '#/definitions/MixItUpInventoryAmount'

  UpdateMixItUpUser:
    type: object
    required: [ ID, CurrencyAmounts ]
    properties:
      ID:
        description: The Mix It Up User ID.
        type: string
        format: uuid
        example: 137CD793-F4E7-4330-8282-B06E52644F78
      ViewingMinutes:
        description: The number of minutes the user has been in the stream.
        type: integer
        example: 3244
      CurrencyAmounts:
        type: array
        items:
          $ref: '#/definitions/MixItUpCurrencyAmount'
      InventoryAmounts:
        type: array
        items:
          $ref: '#/definitions/MixItUpInventoryAmount'
          
  ListOfMixItUpUsernamesOrIDs:
    type: array
    items:
      type: string

  ListOfMixItUpUsers:
    type: array
    items:
      $ref: '#/definitions/MixItUpUser'
      
  ListOfStrings:
    type: array
    items:
      type: string

  AdjustUserCurrency:
    type: object
    required: [ Amount ]
    properties:
      Amount:
        description: The amount to adjust the user's currency.  This amount may be positive or negative.
        type: integer
    
  AdjustUserInventory:
    type: object
    required: [ Name, Amount ]
    properties:
      Name:
        description: The name of the item to adjust for user's inventory.
        type: string
        example: Potions
      Amount:
        description: The amount to adjust the user's inventory.  This amount may be positive or negative.
        type: integer

  MixItUpCurrencyAmount:
    type: object
    required: [ ID, Name, Amount ]
    properties:
      ID:
        description: The Mix It Up currency ID.
        type: string
        format: uuid
        example: 1783e5d9-c2ab-423a-ae64-7dc9a086b194
      Name:
        description: The Mix It Up currency name.
        type: string
        example: Influence
      Amount:
        description: The amount of currency the user has.
        type: integer
        example: 2751

  MixItUpCurrency:
    type: object
    required: [ ID, Name ]
    properties:
      ID:
        description: The Mix It Up currency ID.
        type: string
        format: uuid
        example: 1783e5d9-c2ab-423a-ae64-7dc9a086b194
      Name:
        description: The Mix It Up currency name.
        type: string
        example: Influence

  ListOfMixItUpCurrency:
    type: array
    items:
      $ref: '#/definitions/MixItUpCurrency'

  MixItUpInventoryItemAmount:
    type: object
    required: [ Name, Items ]
    properties:
      Name:
        description: The Mix It Up inventory item name.
        type: string
        example: Influence
      Amount:
        description: The amount of this item the user has.
        type: integer
        example: 2751

  MixItUpInventoryAmount:
    type: object
    required: [ ID, Name, Items ]
    properties:
      ID:
        description: The Mix It Up inventory ID.
        type: string
        format: uuid
        example: 1783e5d9-c2ab-423a-ae64-7dc9a086b194
      Name:
        description: The Mix It Up inventory name.
        type: string
        example: Equipment
      Items:
        type: array
        items:
          $ref: '#/definitions/MixItUpInventoryItemAmount'

  MixItUpInventoryItem:
    type: object
    required: [ Name, Items ]
    properties:
      Name:
        description: The Mix It Up inventory item name.
        type: string
        example: Influence
      BuyAmount:
        description: The amount it costs to purchase this item.
        type: integer
        example: 2000
      SellAmount:
        description: The amount of currency the user gets when they sell this item.
        type: integer
        example: 1000
      MaxAmount:
        description: The maximum number of this item a user may own.
        type: integer
        example: 2751

  MixItUpInventory:
    type: object
    required: [ ID, Name ]
    properties:
      ID:
        description: The Mix It Up inventory ID.
        type: string
        format: uuid
        example: 1783e5d9-c2ab-423a-ae64-7dc9a086b194
      Name:
        description: The Mix It Up inventory name.
        type: string
        example: Equipment
      Items:
        type: array
        items:
          $ref: '#/definitions/MixItUpInventoryItem'
      ShopCurrencyID:
        description: The Mix It Up shop currency ID. This will be an empty UUID (all zeros) if the shop is not enabled.
        type: string
        format: uuid
        example: 1783e5d9-c2ab-423a-ae64-7dc9a086b194

  ListOfMixItUpInventory:
    type: array
    items:
      $ref: '#/definitions/MixItUpInventory'
      
  MixItUpCommand:
    required: [ ID, Name, IsEnabled, Category ]
    type: object
    properties:
      ID:
        description: The Mix It Up command ID.
        type: string
        format: uuid
        example: 1783e5d9-c2ab-423a-ae64-7dc9a086b194
      Name:
        description: The Mix It Up command name.
        type: string
      IsEnabled:
        description: True if enabled, false otherwise
        type: boolean
      Category:
        description: The Mix It Up command category.
        type: string

  ListOfMixItUpCommands:
    type: array
    items:
      $ref: '#/definitions/MixItUpCommand'
      
  UpdateMixItUpCurrency:
    required: [ ID, Amount ]
    type: object
    properties:
      ID:
        description: The Mix It Up currency ID.
        type: string
        format: uuid
        example: 1783e5d9-c2ab-423a-ae64-7dc9a086b194
      Amount:
        description: The amount of currency the user has.
        type: integer
        example: 2751

  GiveUserCurrency:
    required: [ Amount, UsernameOrID ]
    type: object
    properties:
      Amount:
        description: The amount to adjust the user's currency.  This amount may be positive or negative.
        type: integer
        minimum: 1
      UsernameOrID:
        description: The username or ID to adjust.
        type: string

  BulkGiveUsersCurrency:
    type: array
    items:
      $ref: '#/definitions/GiveUserCurrency'

  MixItUpChatMessage:
    required: [ Message ]
    type: object
    properties:
      Message:
        description: The message to send to chat.
        type: string
        example: This is a test of the emergency broadcast system!
      SendAsStreamer:
        description: True will force the message to send as the streamer. False will try to send as the registered bot, if available.
        type: boolean
        example: false
        default: false

  MixItUpChatWhisper:
    required: [ UserName, Message ]
    type: object
    properties:
      UserName:
        description: The user to receive the whisper.
        type: string
        example: TyrenDes
      Message:
        description: The message to send to chat.
        type: string
        example: This is a test of the emergency broadcast system!
      SendAsStreamer:
        description: True will force the whisper to send as the streamer. False will try to send as the registered bot, if available.
        type: boolean
        example: false
        default: false

  Error:
    type: object
    required: [ Message ]
    properties:
      Message:
        description: "A description of the problem."
        type: string
